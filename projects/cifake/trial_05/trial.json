{"trial_id": "05", "hyperparameters": {"space": [{"class_name": "Int", "config": {"name": "conv_1_filter", "default": null, "conditions": [], "min_value": 2, "max_value": 4, "step": 2, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "conv_1_kernel", "default": 3, "conditions": [], "values": [3, 7], "ordered": true}}, {"class_name": "Boolean", "config": {"name": "use_maxpool_first", "default": false, "conditions": []}}, {"class_name": "Int", "config": {"name": "conv_2_filter", "default": null, "conditions": [], "min_value": 2, "max_value": 4, "step": 2, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "conv_2_kernel", "default": 3, "conditions": [], "values": [3, 7], "ordered": true}}, {"class_name": "Int", "config": {"name": "conv_3_filter", "default": null, "conditions": [], "min_value": 2, "max_value": 4, "step": 2, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "conv_3_kernel", "default": 3, "conditions": [], "values": [3, 7], "ordered": true}}, {"class_name": "Int", "config": {"name": "conv_4_filter", "default": null, "conditions": [], "min_value": 2, "max_value": 4, "step": 2, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "conv_4_kernel", "default": 3, "conditions": [], "values": [3, 7], "ordered": true}}, {"class_name": "Int", "config": {"name": "num_dense_layers", "default": null, "conditions": [], "min_value": 0, "max_value": 4, "step": 1, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "learning_rate", "default": 0.001, "conditions": [], "min_value": 0.001, "max_value": 0.1, "step": null, "sampling": "log"}}, {"class_name": "Int", "config": {"name": "dense_1_units", "default": null, "conditions": [], "min_value": 1, "max_value": 513, "step": 256, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "dropout_1_rate", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 0.5, "step": 0.1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "dense_2_units", "default": null, "conditions": [], "min_value": 1, "max_value": 513, "step": 256, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "dropout_2_rate", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 0.5, "step": 0.1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "dense_3_units", "default": null, "conditions": [], "min_value": 1, "max_value": 513, "step": 256, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "dropout_3_rate", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 0.5, "step": 0.1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "dense_4_units", "default": null, "conditions": [], "min_value": 1, "max_value": 513, "step": 256, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "dropout_4_rate", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 0.5, "step": 0.1, "sampling": "linear"}}, {"class_name": "Boolean", "config": {"name": "use_leaky_relu_conv", "default": false, "conditions": []}}], "values": {"conv_1_filter": 2, "conv_1_kernel": 7, "use_maxpool_first": false, "conv_2_filter": 2, "conv_2_kernel": 7, "conv_3_filter": 2, "conv_3_kernel": 3, "conv_4_filter": 4, "conv_4_kernel": 7, "num_dense_layers": 3, "learning_rate": 0.05117045969850107, "dense_1_units": 1, "dropout_1_rate": 0.30000000000000004, "dense_2_units": 257, "dropout_2_rate": 0.1, "dense_3_units": 513, "dropout_3_rate": 0.30000000000000004, "dense_4_units": 513, "dropout_4_rate": 0.0, "use_leaky_relu_conv": false}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"C:\\Users\\Admin\\miniconda3_2\\lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 273, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"C:\\Users\\Admin\\miniconda3_2\\lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 238, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n  File \"C:\\Users\\Admin\\miniconda3_2\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 314, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n  File \"C:\\Users\\Admin\\miniconda3_2\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 232, in _build_and_fit_model\n    model = self._try_build(hp)\n  File \"C:\\Users\\Admin\\miniconda3_2\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 164, in _try_build\n    model = self._build_hypermodel(hp)\n  File \"C:\\Users\\Admin\\miniconda3_2\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 155, in _build_hypermodel\n    model = self.hypermodel.build(hp)\n  File \"C:\\Users\\Admin\\AppData\\Local\\Temp\\ipykernel_33400\\4218000124.py\", line 14, in build_model\n    x = MBConv1(x, expansion=r, out_channels=16, use_se=True)\nNameError: name 'r' is not defined\n"}