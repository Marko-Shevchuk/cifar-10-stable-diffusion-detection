{"trial_id": "00", "hyperparameters": {"space": [{"class_name": "Boolean", "config": {"name": "use_leaky_relu_conv", "default": false, "conditions": []}}, {"class_name": "Int", "config": {"name": "conv_1_filter", "default": null, "conditions": [], "min_value": 2, "max_value": 4, "step": 2, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "conv_1_kernel", "default": 3, "conditions": [], "values": [3, 7], "ordered": true}}, {"class_name": "Boolean", "config": {"name": "l2_reg", "default": false, "conditions": []}}, {"class_name": "Boolean", "config": {"name": "use_maxpool_first", "default": false, "conditions": []}}, {"class_name": "Int", "config": {"name": "conv_2_filter", "default": null, "conditions": [], "min_value": 2, "max_value": 4, "step": 2, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "conv_2_kernel", "default": 3, "conditions": [], "values": [3, 7], "ordered": true}}, {"class_name": "Int", "config": {"name": "conv_3_filter", "default": null, "conditions": [], "min_value": 2, "max_value": 4, "step": 2, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "conv_3_kernel", "default": 3, "conditions": [], "values": [3, 7], "ordered": true}}, {"class_name": "Int", "config": {"name": "conv_4_filter", "default": null, "conditions": [], "min_value": 2, "max_value": 4, "step": 2, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "conv_4_kernel", "default": 3, "conditions": [], "values": [3, 7], "ordered": true}}, {"class_name": "Boolean", "config": {"name": "use_leaky_relu_dense", "default": false, "conditions": []}}, {"class_name": "Int", "config": {"name": "num_dense_layers", "default": null, "conditions": [], "min_value": 0, "max_value": 4, "step": 1, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "learning_rate", "default": 0.001, "conditions": [], "min_value": 0.001, "max_value": 0.1, "step": null, "sampling": "log"}}, {"class_name": "Int", "config": {"name": "dense_1_units", "default": null, "conditions": [], "min_value": 1, "max_value": 513, "step": 256, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "dropout_1_rate", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 0.5, "step": 0.1, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "dense_2_units", "default": null, "conditions": [], "min_value": 1, "max_value": 513, "step": 256, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "dropout_2_rate", "default": 0.0, "conditions": [], "min_value": 0.0, "max_value": 0.5, "step": 0.1, "sampling": "linear"}}], "values": {"use_leaky_relu_conv": false, "conv_1_filter": 2, "conv_1_kernel": 7, "l2_reg": false, "use_maxpool_first": true, "conv_2_filter": 4, "conv_2_kernel": 3, "conv_3_filter": 4, "conv_3_kernel": 3, "conv_4_filter": 2, "conv_4_kernel": 3, "use_leaky_relu_dense": true, "num_dense_layers": 2, "learning_rate": 0.008450851901963471, "dense_1_units": 1, "dropout_1_rate": 0.0, "dense_2_units": 1, "dropout_2_rate": 0.0}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"C:\\Users\\Admin\\miniconda3_2\\lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 273, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"C:\\Users\\Admin\\miniconda3_2\\lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 238, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n  File \"C:\\Users\\Admin\\miniconda3_2\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 314, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n  File \"C:\\Users\\Admin\\miniconda3_2\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 233, in _build_and_fit_model\n    results = self.hypermodel.fit(hp, model, *args, **kwargs)\n  File \"C:\\Users\\Admin\\miniconda3_2\\lib\\site-packages\\keras_tuner\\src\\engine\\hypermodel.py\", line 149, in fit\n    return model.fit(*args, **kwargs)\n  File \"C:\\Users\\Admin\\miniconda3_2\\lib\\site-packages\\keras\\utils\\traceback_utils.py\", line 70, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"C:\\Users\\Admin\\miniconda3_2\\lib\\site-packages\\keras\\saving\\hdf5_format.py\", line 80, in save_model_to_hdf5\n    raise ImportError(\nImportError: `save_model()` using h5 format requires h5py. Could not import h5py.\n"}